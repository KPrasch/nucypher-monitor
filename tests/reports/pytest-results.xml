<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="14" hostname="pegasus" name="pytest" skipped="0" tests="19" time="3.763" timestamp="2020-01-17T14:39:47.103014"><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="31" name="test_storage_init" time="0.025"></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="38" name="test_storage_db_table_init" time="0.001"></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="44" name="test_storage_initialize" time="0.002"></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="51" name="test_storage_store_node_metadata_store" time="0.006"><failure message="sqlite3.InterfaceError: Error binding parameter 0 - probably unsupported type.">def test_storage_store_node_metadata_store():
        node_storage = CrawlerNodeStorage(storage_filepath=IN_MEMORY_FILEPATH)
    
        node = create_specific_mock_node()
    
        # Store node data
&gt;       node_storage.store_node_metadata(node=node)

test_crawler.py:58: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../nucypher/nucypher/config/storages.py:307: in store_node_metadata
    self.__write_node_metadata(node)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;monitor.crawler.CrawlerNodeStorage object at 0x7f0913434f28&gt;
node = &lt;MagicMock id=&apos;139676954726976&apos;&gt;

    def __write_node_metadata(self, node):
        node.mature()
        node_dict = node.abridged_node_details(node)
        db_row = (node_dict[&apos;staker_address&apos;],
                  node_dict[&apos;rest_url&apos;],
                  node_dict[&apos;nickname&apos;],
                  node_dict[&apos;timestamp&apos;],
                  node_dict[&apos;last_seen&apos;],
                  node_dict[&apos;fleet_state_icon&apos;])
        with self.db_conn:
&gt;           self.db_conn.execute(f&apos;REPLACE INTO {self.NODE_DB_NAME} VALUES(?,?,?,?,?,?)&apos;, db_row)
E           sqlite3.InterfaceError: Error binding parameter 0 - probably unsupported type.

../../nucypher/nucypher/config/storages.py:356: InterfaceError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="77" name="test_storage_store_state_metadata_store" time="0.002"><failure message="AttributeError: &apos;CrawlerNodeStorage&apos; object has no attribute &apos;abridged_state_details&apos;">def test_storage_store_state_metadata_store():
        node_storage = CrawlerNodeStorage(storage_filepath=IN_MEMORY_FILEPATH)
    
        state = create_specific_mock_state()
    
        # Store state data
&gt;       node_storage.store_state_metadata(state=state)

test_crawler.py:84: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../monitor/crawler.py:62: in store_state_metadata
    self.__write_state_metadata(state)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;monitor.crawler.CrawlerNodeStorage object at 0x7f0913434da0&gt;
state = &lt;MagicMock id=&apos;139676954507472&apos;&gt;

    def __write_state_metadata(self, state):
&gt;       state_dict = self.abridged_state_details(state)
E       AttributeError: &apos;CrawlerNodeStorage&apos; object has no attribute &apos;abridged_state_details&apos;

../monitor/crawler.py:65: AttributeError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="105" name="test_storage_store_current_retrieval" time="0.001"></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="120" name="test_storage_deletion" time="0.049"></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="129" name="test_storage_db_clear" time="0.015"><failure message="sqlite3.InterfaceError: Error binding parameter 0 - probably unsupported type.">def test_storage_db_clear():
        node_storage = CrawlerNodeStorage(storage_filepath=IN_MEMORY_FILEPATH)
        verify_all_db_tables_exist(node_storage.db_conn)
    
        # store some data
        node = create_random_mock_node()
&gt;       node_storage.store_node_metadata(node=node)

test_crawler.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../nucypher/nucypher/config/storages.py:307: in store_node_metadata
    self.__write_node_metadata(node)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;monitor.crawler.CrawlerNodeStorage object at 0x7f09133669b0&gt;
node = &lt;MagicMock id=&apos;139676955685720&apos;&gt;

    def __write_node_metadata(self, node):
        node.mature()
        node_dict = node.abridged_node_details(node)
        db_row = (node_dict[&apos;staker_address&apos;],
                  node_dict[&apos;rest_url&apos;],
                  node_dict[&apos;nickname&apos;],
                  node_dict[&apos;timestamp&apos;],
                  node_dict[&apos;last_seen&apos;],
                  node_dict[&apos;fleet_state_icon&apos;])
        with self.db_conn:
&gt;           self.db_conn.execute(f&apos;REPLACE INTO {self.NODE_DB_NAME} VALUES(?,?,?,?,?,?)&apos;, db_row)
E           sqlite3.InterfaceError: Error binding parameter 0 - probably unsupported type.

../../nucypher/nucypher/config/storages.py:356: InterfaceError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="152" name="test_storage_db_clear_only_metadata_not_certificates" time="0.006"><failure message="sqlite3.InterfaceError: Error binding parameter 0 - probably unsupported type.">def test_storage_db_clear_only_metadata_not_certificates():
        node_storage = CrawlerNodeStorage(storage_filepath=IN_MEMORY_FILEPATH)
    
        # store some data
        node = create_random_mock_node()
&gt;       node_storage.store_node_metadata(node=node)

test_crawler.py:158: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../nucypher/nucypher/config/storages.py:307: in store_node_metadata
    self.__write_node_metadata(node)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;monitor.crawler.CrawlerNodeStorage object at 0x7f091354af98&gt;
node = &lt;MagicMock id=&apos;139676955197680&apos;&gt;

    def __write_node_metadata(self, node):
        node.mature()
        node_dict = node.abridged_node_details(node)
        db_row = (node_dict[&apos;staker_address&apos;],
                  node_dict[&apos;rest_url&apos;],
                  node_dict[&apos;nickname&apos;],
                  node_dict[&apos;timestamp&apos;],
                  node_dict[&apos;last_seen&apos;],
                  node_dict[&apos;fleet_state_icon&apos;])
        with self.db_conn:
&gt;           self.db_conn.execute(f&apos;REPLACE INTO {self.NODE_DB_NAME} VALUES(?,?,?,?,?,?)&apos;, db_row)
E           sqlite3.InterfaceError: Error binding parameter 0 - probably unsupported type.

../../nucypher/nucypher/config/storages.py:356: InterfaceError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="174" name="test_storage_db_clear_not_metadata" time="0.006"><failure message="sqlite3.InterfaceError: Error binding parameter 0 - probably unsupported type.">def test_storage_db_clear_not_metadata():
        node_storage = CrawlerNodeStorage(storage_filepath=IN_MEMORY_FILEPATH)
    
        # store some data
        node = create_random_mock_node()
&gt;       node_storage.store_node_metadata(node=node)

test_crawler.py:180: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../nucypher/nucypher/config/storages.py:307: in store_node_metadata
    self.__write_node_metadata(node)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;monitor.crawler.CrawlerNodeStorage object at 0x7f091334fb38&gt;
node = &lt;MagicMock id=&apos;139676953840272&apos;&gt;

    def __write_node_metadata(self, node):
        node.mature()
        node_dict = node.abridged_node_details(node)
        db_row = (node_dict[&apos;staker_address&apos;],
                  node_dict[&apos;rest_url&apos;],
                  node_dict[&apos;nickname&apos;],
                  node_dict[&apos;timestamp&apos;],
                  node_dict[&apos;last_seen&apos;],
                  node_dict[&apos;fleet_state_icon&apos;])
        with self.db_conn:
&gt;           self.db_conn.execute(f&apos;REPLACE INTO {self.NODE_DB_NAME} VALUES(?,?,?,?,?,?)&apos;, db_row)
E           sqlite3.InterfaceError: Error binding parameter 0 - probably unsupported type.

../../nucypher/nucypher/config/storages.py:356: InterfaceError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="235" name="test_crawler_init" time="0.002"><failure message="AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;">get_agent = &lt;NonCallableMagicMock name=&apos;get_agent&apos; spec=&apos;classmethod&apos; id=&apos;139676955219280&apos;&gt;

    @patch.object(monitor.crawler.ContractAgency, &apos;get_agent&apos;, autospec=True)
    def test_crawler_init(get_agent):
        staking_agent = MagicMock(spec=StakingEscrowAgent)
        contract_agency = MockContractAgency(staking_agent=staking_agent)
        get_agent.side_effect = contract_agency.get_agent
    
&gt;       crawler = create_crawler()

test_crawler.py:242: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
test_crawler.py:211: in create_crawler
    network_middleware=middleware)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

emitter = None, min_stake = 0, federated_only = False
network_domains = {&apos;goerli&apos;}
network_middleware = &lt;nucypher.network.middleware.RestMiddleware object at 0x7f09134c9438&gt;
teacher_uris = [&apos;https://discover.nucypher.network:9151&apos;], registry = None

    def load_seednodes(emitter,
                       min_stake: int,
                       federated_only: bool,
                       network_domains: set,
                       network_middleware: RestMiddleware = None,
                       teacher_uris: list = None,
                       registry: BaseContractRegistry = None,
                       ) -&gt; List:
    
        &quot;&quot;&quot;
        Aggregates seednodes URI sources into a list or teacher URIs ordered
        by connection priority in the following order:
    
        1. --teacher CLI flag
        2. static-nodes.json
        3. Hardcoded teachers
        &quot;&quot;&quot;
    
        # Heads up
&gt;       emitter.message(&quot;Connecting to preferred teacher nodes...&quot;, color=&apos;yellow&apos;)
E       AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;

../../nucypher/nucypher/cli/actions.py:176: AttributeError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="247" name="test_crawler_stop_before_start" time="0.047"><failure message="AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;">new_influx_db = &lt;MagicMock name=&apos;InfluxDBClient&apos; spec=&apos;InfluxDBClient&apos; id=&apos;139676954313840&apos;&gt;
get_agent = &lt;NonCallableMagicMock name=&apos;get_agent&apos; spec=&apos;classmethod&apos; id=&apos;139676955220904&apos;&gt;

    @patch.object(monitor.crawler.ContractAgency, &apos;get_agent&apos;, autospec=True)
    @patch(&apos;monitor.crawler.InfluxDBClient&apos;, autospec=True)
    def test_crawler_stop_before_start(new_influx_db, get_agent):
        mock_influxdb_client = new_influx_db.return_value
    
        staking_agent = MagicMock(spec=StakingEscrowAgent)
        contract_agency = MockContractAgency(staking_agent=staking_agent)
        get_agent.side_effect = contract_agency.get_agent
    
&gt;       crawler = create_crawler()

test_crawler.py:257: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
test_crawler.py:211: in create_crawler
    network_middleware=middleware)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

emitter = None, min_stake = 0, federated_only = False
network_domains = {&apos;goerli&apos;}
network_middleware = &lt;nucypher.network.middleware.RestMiddleware object at 0x7f09133ea748&gt;
teacher_uris = [&apos;https://discover.nucypher.network:9151&apos;], registry = None

    def load_seednodes(emitter,
                       min_stake: int,
                       federated_only: bool,
                       network_domains: set,
                       network_middleware: RestMiddleware = None,
                       teacher_uris: list = None,
                       registry: BaseContractRegistry = None,
                       ) -&gt; List:
    
        &quot;&quot;&quot;
        Aggregates seednodes URI sources into a list or teacher URIs ordered
        by connection priority in the following order:
    
        1. --teacher CLI flag
        2. static-nodes.json
        3. Hardcoded teachers
        &quot;&quot;&quot;
    
        # Heads up
&gt;       emitter.message(&quot;Connecting to preferred teacher nodes...&quot;, color=&apos;yellow&apos;)
E       AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;

../../nucypher/nucypher/cli/actions.py:176: AttributeError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="265" name="test_crawler_start_then_stop" time="0.047"><failure message="AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;">new_influx_db = &lt;MagicMock name=&apos;InfluxDBClient&apos; spec=&apos;InfluxDBClient&apos; id=&apos;139676953985096&apos;&gt;
get_agent = &lt;NonCallableMagicMock name=&apos;get_agent&apos; spec=&apos;classmethod&apos; id=&apos;139676954232312&apos;&gt;

    @patch.object(monitor.crawler.ContractAgency, &apos;get_agent&apos;, autospec=True)
    @patch(&apos;monitor.crawler.InfluxDBClient&apos;, autospec=True)
    def test_crawler_start_then_stop(new_influx_db, get_agent):
        mock_influxdb_client = new_influx_db.return_value
    
        staking_agent = MagicMock(spec=StakingEscrowAgent)
        contract_agency = MockContractAgency(staking_agent=staking_agent)
        get_agent.side_effect = contract_agency.get_agent
    
&gt;       crawler = create_crawler()

test_crawler.py:275: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
test_crawler.py:211: in create_crawler
    network_middleware=middleware)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

emitter = None, min_stake = 0, federated_only = False
network_domains = {&apos;goerli&apos;}
network_middleware = &lt;nucypher.network.middleware.RestMiddleware object at 0x7f091347c668&gt;
teacher_uris = [&apos;https://discover.nucypher.network:9151&apos;], registry = None

    def load_seednodes(emitter,
                       min_stake: int,
                       federated_only: bool,
                       network_domains: set,
                       network_middleware: RestMiddleware = None,
                       teacher_uris: list = None,
                       registry: BaseContractRegistry = None,
                       ) -&gt; List:
    
        &quot;&quot;&quot;
        Aggregates seednodes URI sources into a list or teacher URIs ordered
        by connection priority in the following order:
    
        1. --teacher CLI flag
        2. static-nodes.json
        3. Hardcoded teachers
        &quot;&quot;&quot;
    
        # Heads up
&gt;       emitter.message(&quot;Connecting to preferred teacher nodes...&quot;, color=&apos;yellow&apos;)
E       AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;

../../nucypher/nucypher/cli/actions.py:176: AttributeError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="286" name="test_crawler_start_no_influx_db_connection" time="0.002"><failure message="AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;">get_agent = &lt;NonCallableMagicMock name=&apos;get_agent&apos; spec=&apos;classmethod&apos; id=&apos;139676950377696&apos;&gt;

    @patch.object(monitor.crawler.ContractAgency, &apos;get_agent&apos;, autospec=True)
    def test_crawler_start_no_influx_db_connection(get_agent):
        staking_agent = MagicMock(spec=StakingEscrowAgent, autospec=True)
        contract_agency = MockContractAgency(staking_agent=staking_agent)
        get_agent.side_effect = contract_agency.get_agent
    
&gt;       crawler = create_crawler()

test_crawler.py:293: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
test_crawler.py:211: in create_crawler
    network_middleware=middleware)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

emitter = None, min_stake = 0, federated_only = False
network_domains = {&apos;goerli&apos;}
network_middleware = &lt;nucypher.network.middleware.RestMiddleware object at 0x7f091302b5c0&gt;
teacher_uris = [&apos;https://discover.nucypher.network:9151&apos;], registry = None

    def load_seednodes(emitter,
                       min_stake: int,
                       federated_only: bool,
                       network_domains: set,
                       network_middleware: RestMiddleware = None,
                       teacher_uris: list = None,
                       registry: BaseContractRegistry = None,
                       ) -&gt; List:
    
        &quot;&quot;&quot;
        Aggregates seednodes URI sources into a list or teacher URIs ordered
        by connection priority in the following order:
    
        1. --teacher CLI flag
        2. static-nodes.json
        3. Hardcoded teachers
        &quot;&quot;&quot;
    
        # Heads up
&gt;       emitter.message(&quot;Connecting to preferred teacher nodes...&quot;, color=&apos;yellow&apos;)
E       AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;

../../nucypher/nucypher/cli/actions.py:176: AttributeError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="300" name="test_crawler_start_blockchain_db_not_present" time="0.063"><failure message="AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;">new_influx_db = &lt;MagicMock name=&apos;InfluxDBClient&apos; spec=&apos;InfluxDBClient&apos; id=&apos;139676955057960&apos;&gt;
get_agent = &lt;NonCallableMagicMock name=&apos;get_agent&apos; spec=&apos;classmethod&apos; id=&apos;139676951055104&apos;&gt;

    @patch.object(monitor.crawler.ContractAgency, &apos;get_agent&apos;, autospec=True)
    @patch(&apos;monitor.crawler.InfluxDBClient&apos;, autospec=True)
    def test_crawler_start_blockchain_db_not_present(new_influx_db, get_agent):
        mock_influxdb_client = new_influx_db.return_value
        mock_influxdb_client.get_list_database.return_value = [{&apos;name&apos;: &apos;db1&apos;},
                                                               {&apos;name&apos;: &apos;db2&apos;},
                                                               {&apos;name&apos;: &apos;db3&apos;}]
    
        staking_agent = MagicMock(spec=StakingEscrowAgent)
        contract_agency = MockContractAgency(staking_agent=staking_agent)
        get_agent.side_effect = contract_agency.get_agent
    
&gt;       crawler = create_crawler()

test_crawler.py:313: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
test_crawler.py:211: in create_crawler
    network_middleware=middleware)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

emitter = None, min_stake = 0, federated_only = False
network_domains = {&apos;goerli&apos;}
network_middleware = &lt;nucypher.network.middleware.RestMiddleware object at 0x7f0913089ef0&gt;
teacher_uris = [&apos;https://discover.nucypher.network:9151&apos;], registry = None

    def load_seednodes(emitter,
                       min_stake: int,
                       federated_only: bool,
                       network_domains: set,
                       network_middleware: RestMiddleware = None,
                       teacher_uris: list = None,
                       registry: BaseContractRegistry = None,
                       ) -&gt; List:
    
        &quot;&quot;&quot;
        Aggregates seednodes URI sources into a list or teacher URIs ordered
        by connection priority in the following order:
    
        1. --teacher CLI flag
        2. static-nodes.json
        3. Hardcoded teachers
        &quot;&quot;&quot;
    
        # Heads up
&gt;       emitter.message(&quot;Connecting to preferred teacher nodes...&quot;, color=&apos;yellow&apos;)
E       AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;

../../nucypher/nucypher/cli/actions.py:176: AttributeError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="330" name="test_crawler_start_blockchain_db_already_present" time="0.055"><failure message="AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;">new_influx_db = &lt;MagicMock name=&apos;InfluxDBClient&apos; spec=&apos;InfluxDBClient&apos; id=&apos;139676953988288&apos;&gt;
get_agent = &lt;NonCallableMagicMock name=&apos;get_agent&apos; spec=&apos;classmethod&apos; id=&apos;139676954105560&apos;&gt;

    @patch.object(monitor.crawler.ContractAgency, &apos;get_agent&apos;, autospec=True)
    @patch(&apos;monitor.crawler.InfluxDBClient&apos;, autospec=True)
    def test_crawler_start_blockchain_db_already_present(new_influx_db, get_agent):
        mock_influxdb_client = new_influx_db.return_value
        mock_influxdb_client.get_list_database.return_value = [{&apos;name&apos;: &apos;db1&apos;},
                                                               {&apos;name&apos;: f&apos;{Crawler.BLOCKCHAIN_DB_NAME}&apos;},
                                                               {&apos;name&apos;: &apos;db3&apos;}]
    
        staking_agent = MagicMock(spec=StakingEscrowAgent)
        contract_agency = MockContractAgency(staking_agent=staking_agent)
        get_agent.side_effect = contract_agency.get_agent
    
&gt;       crawler = create_crawler()

test_crawler.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
test_crawler.py:211: in create_crawler
    network_middleware=middleware)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

emitter = None, min_stake = 0, federated_only = False
network_domains = {&apos;goerli&apos;}
network_middleware = &lt;nucypher.network.middleware.RestMiddleware object at 0x7f0913589240&gt;
teacher_uris = [&apos;https://discover.nucypher.network:9151&apos;], registry = None

    def load_seednodes(emitter,
                       min_stake: int,
                       federated_only: bool,
                       network_domains: set,
                       network_middleware: RestMiddleware = None,
                       teacher_uris: list = None,
                       registry: BaseContractRegistry = None,
                       ) -&gt; List:
    
        &quot;&quot;&quot;
        Aggregates seednodes URI sources into a list or teacher URIs ordered
        by connection priority in the following order:
    
        1. --teacher CLI flag
        2. static-nodes.json
        3. Hardcoded teachers
        &quot;&quot;&quot;
    
        # Heads up
&gt;       emitter.message(&quot;Connecting to preferred teacher nodes...&quot;, color=&apos;yellow&apos;)
E       AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;

../../nucypher/nucypher/cli/actions.py:176: AttributeError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="360" name="test_crawler_learn_no_teacher" time="0.102"><failure message="TypeError: &apos;NonCallableMagicMock&apos; object is not callable">new_influx_db = &lt;MagicMock name=&apos;InfluxDBClient&apos; spec=&apos;InfluxDBClient&apos; id=&apos;139676953810480&apos;&gt;
get_agent = &lt;NonCallableMagicMock name=&apos;get_agent&apos; spec=&apos;classmethod&apos; id=&apos;139676956958792&apos;&gt;
tempfile_path = &apos;/tmp/tmpseyy5mir&apos;

    @patch.object(monitor.crawler.ContractAgency, &apos;get_agent&apos;, autospec=True)
    @patch(&apos;monitor.crawler.InfluxDBClient&apos;, autospec=True)
    def test_crawler_learn_no_teacher(new_influx_db, get_agent, tempfile_path):
        mock_influxdb_client = new_influx_db.return_value
    
        staking_agent = MagicMock(spec=StakingEscrowAgent)
        contract_agency = MockContractAgency(staking_agent=staking_agent)
        get_agent.side_effect = contract_agency.get_agent
    
&gt;       crawler = create_crawler(node_db_filepath=tempfile_path, dont_set_teacher=True)

test_crawler.py:370: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
test_crawler.py:221: in create_crawler
    node_storage_filepath=node_db_filepath
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;monitor.crawler.Crawler object at 0x7f09133d84e0&gt;
registry = InMemoryContractRegistry(id=a44a19), blockchain_db_host = &apos;localhost&apos;
blockchain_db_port = 8086, node_storage_filepath = &apos;/tmp/tmpseyy5mir&apos;
refresh_rate = 60, restart_on_error = True, args = ()
kwargs = {&apos;domains&apos;: {&apos;goerli&apos;}, &apos;known_nodes&apos;: None, &apos;learn_on_same_thread&apos;: False, &apos;network_middleware&apos;: &lt;nucypher.network.middleware.RestMiddleware object at 0x7f0913434ef0&gt;, ...}
MonitoringTracker = &lt;class &apos;monitor.crawler.Crawler.__init__.&lt;locals&gt;.MonitoringTracker&apos;&gt;

    def __init__(self,
                 registry,
                 blockchain_db_host: str,
                 blockchain_db_port: int,
                 node_storage_filepath: str = CrawlerNodeStorage.DEFAULT_DB_FILEPATH,
                 refresh_rate=DEFAULT_REFRESH_RATE,
                 restart_on_error=True,
                 *args, **kwargs):
    
        self.registry = registry
        self.federated_only = False
        node_storage = CrawlerNodeStorage(storage_filepath=node_storage_filepath)
    
        class MonitoringTracker(FleetStateTracker):
            def record_fleet_state(self, *args, **kwargs):
                new_state_or_none = super().record_fleet_state(*args, **kwargs)
                if new_state_or_none:
                    _, new_state = new_state_or_none
                    node_storage.store_state_metadata(new_state)
    
        self.tracker_class = MonitoringTracker
    
        super().__init__(save_metadata=True, node_storage=node_storage, *args, **kwargs)
        self.log = Logger(self.__class__.__name__)
        self.log.info(f&quot;Storing node metadata in DB: {node_storage.db_filepath}&quot;)
        self.log.info(f&quot;Storing blockchain metadata in DB: {blockchain_db_host}:{blockchain_db_port}&quot;)
    
        self._refresh_rate = refresh_rate
        self._restart_on_error = restart_on_error
    
        # Agency
&gt;       self.staking_agent = ContractAgency.get_agent(StakingEscrowAgent, registry=self.registry)
E       TypeError: &apos;NonCallableMagicMock&apos; object is not callable

../monitor/crawler.py:144: TypeError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="390" name="test_crawler_learn_about_teacher" time="0.055"><failure message="AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;">new_influx_db = &lt;MagicMock name=&apos;InfluxDBClient&apos; spec=&apos;InfluxDBClient&apos; id=&apos;139676956007112&apos;&gt;
get_agent = &lt;NonCallableMagicMock name=&apos;get_agent&apos; spec=&apos;classmethod&apos; id=&apos;139676956005432&apos;&gt;
tempfile_path = &apos;/tmp/tmpe1_ss6a6&apos;

    @patch.object(monitor.crawler.ContractAgency, &apos;get_agent&apos;, autospec=True)
    @patch(&apos;monitor.crawler.InfluxDBClient&apos;, autospec=True)
    def test_crawler_learn_about_teacher(new_influx_db, get_agent, tempfile_path):
        mock_influxdb_client = new_influx_db.return_value
    
        staking_agent = MagicMock(spec=StakingEscrowAgent)
        contract_agency = MockContractAgency(staking_agent=staking_agent)
        get_agent.side_effect = contract_agency.get_agent
    
&gt;       crawler = create_crawler(node_db_filepath=tempfile_path)

test_crawler.py:400: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
test_crawler.py:211: in create_crawler
    network_middleware=middleware)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

emitter = None, min_stake = 0, federated_only = False
network_domains = {&apos;goerli&apos;}
network_middleware = &lt;nucypher.network.middleware.RestMiddleware object at 0x7f0913479390&gt;
teacher_uris = [&apos;https://discover.nucypher.network:9151&apos;], registry = None

    def load_seednodes(emitter,
                       min_stake: int,
                       federated_only: bool,
                       network_domains: set,
                       network_middleware: RestMiddleware = None,
                       teacher_uris: list = None,
                       registry: BaseContractRegistry = None,
                       ) -&gt; List:
    
        &quot;&quot;&quot;
        Aggregates seednodes URI sources into a list or teacher URIs ordered
        by connection priority in the following order:
    
        1. --teacher CLI flag
        2. static-nodes.json
        3. Hardcoded teachers
        &quot;&quot;&quot;
    
        # Heads up
&gt;       emitter.message(&quot;Connecting to preferred teacher nodes...&quot;, color=&apos;yellow&apos;)
E       AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;

../../nucypher/nucypher/cli/actions.py:176: AttributeError</failure></testcase><testcase classname="tests.test_crawler" file="tests/test_crawler.py" line="421" name="test_crawler_learn_about_nodes" time="0.052"><failure message="AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;">new_influx_db = &lt;MagicMock name=&apos;InfluxDBClient&apos; spec=&apos;InfluxDBClient&apos; id=&apos;139676954889184&apos;&gt;
get_agent = &lt;NonCallableMagicMock name=&apos;get_agent&apos; spec=&apos;classmethod&apos; id=&apos;139676954888848&apos;&gt;
get_economics = &lt;NonCallableMagicMock name=&apos;get_economics&apos; spec=&apos;classmethod&apos; id=&apos;139676953738880&apos;&gt;
tempfile_path = &apos;/tmp/tmpztvdl1pl&apos;

    @patch.object(monitor.crawler.TokenEconomicsFactory, &apos;get_economics&apos;, autospec=True)
    @patch.object(monitor.crawler.ContractAgency, &apos;get_agent&apos;, autospec=True)
    @patch(&apos;monitor.crawler.InfluxDBClient&apos;, autospec=True)
    def test_crawler_learn_about_nodes(new_influx_db, get_agent, get_economics, tempfile_path):
        mock_influxdb_client = new_influx_db.return_value
        mock_influxdb_client.write_points.return_value = True
    
        # TODO: issue with use of `agent.blockchain` causes spec=StakingEscrowAgent not to be specified in MagicMock
        # Get the following - AttributeError: Mock object has no attribute &apos;blockchain&apos;
        staking_agent = MagicMock(autospec=True)
        contract_agency = MockContractAgency(staking_agent=staking_agent)
        get_agent.side_effect = contract_agency.get_agent
    
        token_economics = StandardTokenEconomics()
        get_economics.return_value = token_economics
    
&gt;       crawler = create_crawler(node_db_filepath=tempfile_path)

test_crawler.py:438: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
test_crawler.py:211: in create_crawler
    network_middleware=middleware)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

emitter = None, min_stake = 0, federated_only = False
network_domains = {&apos;goerli&apos;}
network_middleware = &lt;nucypher.network.middleware.RestMiddleware object at 0x7f091335bc18&gt;
teacher_uris = [&apos;https://discover.nucypher.network:9151&apos;], registry = None

    def load_seednodes(emitter,
                       min_stake: int,
                       federated_only: bool,
                       network_domains: set,
                       network_middleware: RestMiddleware = None,
                       teacher_uris: list = None,
                       registry: BaseContractRegistry = None,
                       ) -&gt; List:
    
        &quot;&quot;&quot;
        Aggregates seednodes URI sources into a list or teacher URIs ordered
        by connection priority in the following order:
    
        1. --teacher CLI flag
        2. static-nodes.json
        3. Hardcoded teachers
        &quot;&quot;&quot;
    
        # Heads up
&gt;       emitter.message(&quot;Connecting to preferred teacher nodes...&quot;, color=&apos;yellow&apos;)
E       AttributeError: &apos;NoneType&apos; object has no attribute &apos;message&apos;

../../nucypher/nucypher/cli/actions.py:176: AttributeError</failure></testcase></testsuite></testsuites>